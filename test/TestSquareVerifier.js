const verifier = artifacts.require('./Verifier.sol');
const {proof, inputs} = require('./proof');
const {
    BN, 
    constants, 
    expectEvent,
    expectRevert,    
} = require('@openzeppelin/test-helpers');

// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
 contract ('Verifier', async accounts => {
    beforeEach(async function () {
        this.contract = await verifier.new()
    })


// Test verification with correct proof
it('tests if a proof is verified', async function () {
    let result = await this.contract.verifyTx(proof, inputs);
    assert.equal(result, true, 'correct proof is verified');

    });


// - use the contents from proof.json generated from zokrates steps

    
// Test verification with incorrect proof
it('tests if a proof is not verified', async function () {
    let notProof = {
        ...proof
    };
    notProof.c = notProof.a;

    let result = await this.contract.verifyTx(notProof, inputs);
    assert.equal(result, false, 'not correct proof, not verified');

